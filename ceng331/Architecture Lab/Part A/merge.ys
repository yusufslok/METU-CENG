# Yusuf Sami LÃ¶k 2521748
.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

merge:
    rrmovq %rdi, %r9
    rrmovq %rsi, %r10
    rrmovq %rdx, %r11
    rrmovq %rcx, %r12
    subq %r9, %r10
    jle while2
    subq %r11, %r12
    jle while2
    mrmovq (%rdi), %r9
    mrmovq (%rdx), %r11
    mrmovq (%r8), %r13
    subq %r9, %r11
    jle else1
    mrmovq (%rdi), %r14
    rmmovq %r14, (%r8)
    irmovq $8, %r14
    addq %r14, %rdi
    addq %r14, %r8
    jmp merge
else1:
    mrmovq (%rdx), %r14
    rmmovq %r14, (%r8)
    irmovq $8, %r14
    addq %r14, %rdx
    addq %r14, %r8
    jmp merge
while2:
    rrmovq %rdi, %r9
    rrmovq %rsi, %r10
    subq %r9, %r10
    jle while3
    mrmovq (%rdi), %r14
    rmmovq %r14, (%r8)
    irmovq $8, %r14
    addq %r14, %rdi
    addq %r14, %r8
    jmp while2
while3:
    rrmovq %rdx, %r11
    rrmovq %rcx, %r12
    subq %r11, %r12
    jle rett
    mrmovq (%rdx), %r14
    rmmovq %r14, (%r8)
    irmovq $8, %r14
    addq %r14, %rdx
    addq %r14, %r8
    jmp while3
rett:
    ret


#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin1:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 17
    .quad 18
    .quad 19
    .quad 110
array_end1:
    .quad 0
array_begin2:
    .quad 10
    .quad 11
    .quad 12
    .quad 200
    .quad 201
    .quad 202
    .quad 203
    .quad 204
array_end2:
    .quad 0
.pos 0x1500
array_begin3:
    .quad 0
.pos 0x1F00
stack:
    .quad 0


